Maktaba can give you a few different signals about which plugins are loaded and
which aren't. Before we can see them, we'll have to install maktaba:

  :set nocompatible
  :let g:maktabadir = fnamemodify($VROOMFILE, ':p:h:h')
  :let g:bootstrapfile = g:maktabadir . '/bootstrap.vim'
  :execute 'source' g:bootstrapfile

and a fake plugin:

  :let g:thisdir = fnamemodify($VROOMFILE, ':p:h')
  :let g:repo = maktaba#path#Join([g:thisdir, 'fakeplugins'])
  :let g:pluginpath = maktaba#path#Join([g:repo, 'myplugin'])
  :let g:plugin = maktaba#plugin#Install(g:pluginpath)

The best way to interact with a maktaba plugin is to use maktaba#plugin#Get to
get direct access to the plugin object. Plugin objects can tell you whether or
not their plugin has been loaded. Using maktaba is not always possible for
third-party plugin managers, though.

Vim establishes a (rather crippled) convention that is useful for checking
whether certain plugins have been loaded: the variable g:loaded_{plugin} is
supposed to be set, where {plugin} is the plugin name, when the plugin is
loaded. Maktaba DOES NOT honor this convention: maktaba plugins can be loaded
piecemeal, and there's no clear moment at which a plugin is definitively
'loaded'.

  :call maktaba#ensure#IsFalse(exists('g:loaded_myplugin'))

Maktaba DOES, however, prevent your plugin files from being re-entered. The
primary use of the g:loaded_* variables is to help you prevent re-entry, so most
plugin authors should not mourn its passing. If you still want to set g:loaded_*
variables, you are welcome to do so at whatever moment you think your plugin
qualifies as "loaded".

A more useful plugin signal occurs not when the plugin is loaded but when it is
installed. There is a gap of time between plugin INSTALLATION (when the plugin
is on the runtimepath) and plugin LOADING (when the plugin files are sourced).
For example, autoloaded functions are available after installation, before any
plugin has time to set their g:loaded_* variable.

Maktaba works around this issue by setting a different global variable,
g:installed_{plugin}, signaling that the plugin is installed (but perhaps not
yet loaded).

  :call maktaba#ensure#IsTrue(g:installed_myplugin)

If the plugin name contains special characters, the corresponding variable will
replace them with underscores.

  :let g:weirdpath = maktaba#path#Join([g:repo, 'weird¬p…l✓u↓g⏎i‽n'])
  :let g:weirdplugin = maktaba#plugin#Install(g:weirdpath)

  :echomsg g:weirdplugin.name
  ~ weird¬p…l✓u↓g⏎i‽n
  :call maktaba#ensure#IsTrue(g:installed_weird_p_l_u_g_i_n)

In general, you should use maktaba#plugin#IsRegistered to check whether a plugin
is available: however, the g:installed_{plugin} variable is accessible even by
those who are not using maktaba.
